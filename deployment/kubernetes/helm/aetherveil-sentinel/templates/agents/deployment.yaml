{{- range $agentType, $agent := .Values.agents }}
{{- if $agent.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aetherveil-sentinel.fullname" $ }}-agent-{{ $agentType }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "aetherveil-sentinel.labels" $ | nindent 4 }}
    app.kubernetes.io/component: agent
    app.kubernetes.io/agent-type: {{ $agentType }}
spec:
  replicas: {{ $agent.replicaCount }}
  selector:
    matchLabels:
      {{- include "aetherveil-sentinel.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: agent
      app.kubernetes.io/agent-type: {{ $agentType }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/agents/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/agents/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "aetherveil-sentinel.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: agent
        app.kubernetes.io/agent-type: {{ $agentType }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aetherveil-sentinel.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.common.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-coordinator
          image: curlimages/curl:8.4.0
          command:
            - sh
            - -c
            - |
              until curl -f http://{{ include "aetherveil-sentinel.fullname" $ }}-coordinator:{{ $.Values.coordinator.service.port }}/health; do
                echo "Waiting for coordinator to be ready..."
                sleep 5
              done
              echo "Coordinator is ready"
        - name: wait-for-redis
          image: redis:7-alpine
          command: ['sh', '-c', 'until redis-cli -h {{ $.Values.coordinator.config.redis.host }} -p {{ $.Values.coordinator.config.redis.port }} ping; do echo waiting for redis; sleep 2; done;']
      containers:
        - name: {{ $agentType }}-agent
          securityContext:
            {{- toYaml $.Values.common.securityContext | nindent 12 }}
          image: "{{ $.Values.common.image.registry }}/{{ $agent.image.repository }}:{{ $agent.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.common.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - name: health
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          env:
            - name: AGENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AGENT_TYPE
              value: {{ $agentType }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: LOG_LEVEL
              value: {{ $.Values.common.env.LOG_LEVEL }}
            - name: PYTHONUNBUFFERED
              value: {{ $.Values.common.env.PYTHONUNBUFFERED | quote }}
            - name: COORDINATOR_HOST
              value: {{ include "aetherveil-sentinel.fullname" $ }}-coordinator
            - name: COORDINATOR_PORT
              value: {{ $.Values.coordinator.service.port | quote }}
            - name: REDIS_HOST
              value: {{ $.Values.coordinator.config.redis.host }}
            - name: REDIS_PORT
              value: {{ $.Values.coordinator.config.redis.port | quote }}
            - name: REDIS_DATABASE
              value: {{ $.Values.coordinator.config.redis.database | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "aetherveil-sentinel.fullname" $ }}-agent-secret
                  key: redis-password
            - name: AGENT_CAPABILITIES
              value: {{ $agent.capabilities | join "," | quote }}
            - name: ENABLE_TLS
              value: {{ $.Values.coordinator.config.security.enableTLS | quote }}
            {{- if $.Values.coordinator.config.security.enableTLS }}
            - name: CERTIFICATE_PATH
              value: "/app/certs/tls.crt"
            - name: PRIVATE_KEY_PATH
              value: "/app/certs/tls.key"
            - name: CA_CERTIFICATE_PATH
              value: "/app/certs/ca.crt"
            {{- end }}
            {{- if $.Values.tracing.enabled }}
            - name: JAEGER_ENDPOINT
              value: "{{ $.Values.tracing.jaeger.collector.endpoint | default "http://jaeger-collector:14268/api/traces" }}"
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "aetherveil-sentinel.fullname" $ }}-agent-config
          resources:
            {{- toYaml $agent.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
            {{- if $.Values.coordinator.config.security.enableTLS }}
            - name: certificates
              mountPath: /app/certs
              readOnly: true
            {{- end }}
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "aetherveil-sentinel.fullname" $ }}-agent-config
        - name: secrets
          secret:
            secretName: {{ include "aetherveil-sentinel.fullname" $ }}-agent-secret
        {{- if $.Values.coordinator.config.security.enableTLS }}
        - name: certificates
          secret:
            secretName: {{ include "aetherveil-sentinel.fullname" $ }}-certificates
        {{- end }}
        - name: logs
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      {{- with $.Values.common.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.common.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.common.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}