version: '3.8'

services:
  # Test Coordinator
  coordinator-test:
    build:
      context: ../
      dockerfile: deployment/docker/coordinator/Dockerfile
    container_name: aetherveil-coordinator-test
    environment:
      - ENVIRONMENT=test
      - REDIS_URL=redis://redis-test:6379
      - NEO4J_URI=bolt://neo4j-test:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=testpassword
      - ENCRYPTION_KEY=test-encryption-key-32-characters
      - JWT_SECRET=test-jwt-secret
      - GRPC_PORT=50051
      - API_PORT=8000
      - ENABLE_MTLS=false
      - LOG_LEVEL=DEBUG
    ports:
      - "8000:8000"
      - "50051:50051"
    depends_on:
      - redis-test
      - neo4j-test
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Test Reconnaissance Agent
  reconnaissance-agent-test:
    build:
      context: ../
      dockerfile: deployment/docker/agents/reconnaissance/Dockerfile
    environment:
      - AGENT_TYPE=reconnaissance
      - COORDINATOR_URL=grpc://coordinator-test:50051
      - REDIS_URL=redis://redis-test:6379
      - ENABLE_MTLS=false
      - LOG_LEVEL=DEBUG
    depends_on:
      - coordinator-test
      - redis-test
    networks:
      - test-network

  # Test Scanner Agent
  scanner-agent-test:
    build:
      context: ../
      dockerfile: deployment/docker/agents/scanner/Dockerfile
    environment:
      - AGENT_TYPE=scanner
      - COORDINATOR_URL=grpc://coordinator-test:50051
      - REDIS_URL=redis://redis-test:6379
      - ENABLE_MTLS=false
      - LOG_LEVEL=DEBUG
    depends_on:
      - coordinator-test
      - redis-test
    networks:
      - test-network

  # Test OSINT Agent
  osint-agent-test:
    build:
      context: ../
      dockerfile: deployment/docker/agents/osint/Dockerfile
    environment:
      - AGENT_TYPE=osint
      - COORDINATOR_URL=grpc://coordinator-test:50051
      - REDIS_URL=redis://redis-test:6379
      - ENABLE_MTLS=false
      - LOG_LEVEL=DEBUG
    depends_on:
      - coordinator-test
      - redis-test
    networks:
      - test-network

  # Test Redis Database
  redis-test:
    image: redis:7-alpine
    container_name: aetherveil-redis-test
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_test_data:/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Test Neo4j Database
  neo4j-test:
    image: neo4j:5-community
    container_name: aetherveil-neo4j-test
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_memory_pagecache_size=512m
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_test_data:/data
      - neo4j_test_logs:/logs
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test Web Dashboard
  web-dashboard-test:
    build:
      context: ../
      dockerfile: deployment/docker/dashboard/Dockerfile
    environment:
      - NODE_ENV=test
      - API_URL=http://coordinator-test:8000
      - ENABLE_HTTPS=false
    ports:
      - "3000:3000"
    depends_on:
      - coordinator-test
    networks:
      - test-network

volumes:
  redis_test_data:
  neo4j_test_data:
  neo4j_test_logs:

networks:
  test-network:
    driver: bridge