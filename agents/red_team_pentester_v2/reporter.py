# agents/red_team_pentester_v2/reporter.py

import os
from google.cloud import secretmanager
import requests

secret_manager_client = secretmanager.SecretManagerServiceClient()

def get_secret(secret_id, version_id="latest"):
    """Access the payload for the given secret version if one exists."""
    project_id = os.environ.get("PROJECT_ID")
    name = f"projects/{project_id}/secrets/{secret_id}/versions/{version_id}"
    response = secret_manager_client.access_secret_version(name=name)
    return response.payload.data.decode("UTF-8")

def report_finding(finding, config):
    """Simulates reporting a finding to Slack/email."""
    print(f"  [Reporter] Reporting finding: {finding['name']}")
    
    # Simulate Slack notification
    try:
        slack_webhook_url = get_secret(config["slack_webhook_url_secret_id"])
        payload = {
            "text": f"New Red Team Finding: {finding['name']} at {finding['url']} (Severity: {finding['severity']})\nDescription: {finding['description']}"
        }
        response = requests.post(slack_webhook_url, json=payload)
        response.raise_for_status()
        print("  [Reporter] Simulated Slack notification sent.")
    except Exception as e:
        print(f"  [Reporter] Error sending Slack notification: {e}")
        
    # Simulate email notification (placeholder)
    print(f"  [Reporter] Simulated email notification to {config["email_recipient"]}")

