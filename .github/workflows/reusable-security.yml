# Reusable Security Workflow
# Handles all security scanning tools.

name: Reusable Security

on:
  workflow_call:
    secrets:
      GITLEAKS_LICENSE:
        required: false
      GH_TOKEN: # Use a non-reserved name for the token
        required: true
  workflow_dispatch: # Allow manual runs

env:
  PYTHON_VERSION: '3.11'

jobs:
  secrets-scan:
    runs-on: ubuntu-latest
    name: Secrets Scan
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for Gitleaks
    - name: Run Gitleaks Secret Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  code-scans:
    runs-on: ubuntu-latest
    name: Code Analysis (${{ matrix.scan-type }})
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    strategy:
      matrix:
        scan-type: [bandit, safety, semgrep]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install ${{ matrix.scan-type }}
      run: pip install ${{ matrix.scan-type }}
    - name: Run ${{ matrix.scan-type }}
      run: |
        if [ "${{ matrix.scan-type }}" = "bandit" ]; then
          bandit -r . -f json -o bandit-report.json
        elif [ "${{ matrix.scan-type }}" = "safety" ]; then
          safety check --json --output safety-report.json
        elif [ "${{ matrix.scan-type }}" = "semgrep" ]; then
          semgrep --config=auto --json --output=semgrep-report.json .
        fi
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.scan-type }}-report
        path: ${{ matrix.scan-type }}-report.json